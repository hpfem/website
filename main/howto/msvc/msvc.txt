* DO NOT do's and DO's for the future compatibility with MSVC

 I. DO NOT use variable-length arrays (VLA)
   > example: 'AsmList al[wf->neg];'
   > replacement: 'AUTOLA_CL(AsmList, al, wf->neq);'
   > note: If the type is not a class or a structure, a macro 'AUTOLA_OR' can be used instead. This macro does not call constructor and therefore it may allocate the data on stack.
   > descrition: Variable-length arrays are introduced in C99 which is *not* part of ISO C++. Therefore, MSVC does not support it. Also, the stack has only a limited size and therefore it should not be used similar to the heap.

 II. DO explictitly declare types of constants
   > example: 'sqrt(2)'
   > replacement: 'sqrt(2.0)'
   > descrition: Since C++ allows overloading and the function SQRT has at least two overloads which both allow a valid conversion from an integer. Hence, the compiler might not be able to select between these two.

 III. DO use the macro 'EXTERN' when declaring a public variable, i.e., a variable which is part of API
   > example: 'extern int g_max_order;'
   > replacement: 'EXTERN int g_max_order;'
   > descrition: In MSVC, Hermes2d is compiled into a DLL. Windows DLL is a stand-alone module which behaves differently from SO on LINUX. All exported symbols has to be explicitly marked by '__declspec(dllexport)' and all imported symbols has to be explicitly marked by '__declspec(dllimport)'. The macro 'EXTERN' does this for you. Please, use it.

 IV. DO use the macro 'EXTERN' and 'PUBLIC_API' when declaring a public function, i.e., a function which is part of API
   > example:
     # declaration: 'extern void warn_order();'
     # definition: 'void warn_order() {...'
   > replacement:
     # declaration: 'EXTERN void warn_order();'
     # definition: 'PUBLIC_API void warn_order() {...'
   > descrition: This is similar to the macro 'EXTERN'.

 V. DO use the macro 'PUBLIC_API' when declaring a public class which is not a template.
   > example: 'class LinSystem'
   > replacement: 'class PUBLIC_API LinSystem'
   > descrition: This is similar to the macro 'EXTERN'.

